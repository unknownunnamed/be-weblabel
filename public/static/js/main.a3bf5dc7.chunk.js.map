{"version":3,"sources":["utility/http-commons.js","process/services.js","state/index.js","state/atom/beritaCounter.js","utility/color.js","pages/home/dataNull.js","pages/home/notNull.js","pages/home/index.js","assets/svg/error.svg","pages/login/index.js","assets/svg/notfound.svg","pages/notfound/index.js","components/customButton/index.js","components/editedModal/index.js","components/table/index.js","components/tambahBeritaExcel/index.js","components/tambahModal/index.js","components/title/index.js","pages/admin/berita/index.js","components/cardDashboard/index.js","pages/admin/dashboard/index.js","state/selector.js","components/tambahLabel/index.js","pages/admin/label/index.js","components/editedUser/index.js","components/tambahUser/index.js","pages/admin/userLabel/index.js","pages/admin/index.js","App.js","reportWebVitals.js","pages/loading/index.js","index.js"],"names":["axios","create","baseURL","services","login","typeLogin","data","http","post","getBeritaUser","id","get","getBerita","postBerita","postBeritaExcel","putBerita","put","deleteBerita","delete","getUserLabel","addUserLabel","updateUserLabel","deleteUserLabel","getLabel","addManyLabel","getBeritaLabel","labeledByUser","atom","beritaCounter","key","default","color","DataNull","className","NotNull","props","useState","isProses","setIsProses","judul","sumber","isi","labels","beritumId","userlabelId","label","setLabel","useRecoilState","counter","setCounter","style","textAlign","Form","Group","Select","onChange","e","target","value","hidden","onClick","event","preventDefault","then","_","swal","icon","catch","error","toString","handleSubmit","backgroundColor","white","red","to","pathname","Home","history","useHistory","useRecoilValue","setData","useCallback","a","berita","useEffect","user","localStorage","getItem","console","log","push","black","removeItem","cursor","borderRadius","Login","isError","setIsError","username","setUsername","password","setPassword","gray","padding","Card","border","paddingTop","paddingBottom","paddingLeft","paddingRight","Title","Body","Control","placeholder","borderColor","opacity","outline","boxShadow","type","Button","result","length","setItem","HandleLogin","Modal","show","onHide","src","cautionIMG","alt","NotFound","notfound","width","height","link","CustomButton","title","bgColor","textColor","isLink","marginRight","EditedModal","handleJudul","setHandleJudul","handleSumber","setHandleSumber","handleIsi","setHandleIsi","setShow","handleUpdateBerita","handleClose","blue","Header","closeButton","Alert","variant","Footer","SearchBar","Search","TableData","columns","defaultSorted","bootstrap4","keyField","search","float","searchProps","baseProps","pagination","paginationFactory","active","overflowX","TambahBeritaExcel","fileExcel","setFileExcel","handleAddBerita","FormData","append","files","TambahModal","setJudul","setSumber","setIsi","fontSize","Berita","dataField","text","sort","headerStyle","formatter","row","buttons","dangerMode","willDelete","handleDelete","Container","order","CardDashboard","body","fontWeight","Dashboard","selector","TambahLabel","userLabel","idUserLabel","setIdUserLabel","jumlahBerita","setJumlahBerita","map","index","Label","EditedUser","handleUsername","setHandleUsername","handlePassword","setHandlePassword","TambahUser","handleAddUser","UserLabel","Admin","urlAdmin","name","route","faHome","faTable","faTags","faUser","basename","margin","element","listStyleType","marginBottom","size","faSignOutAlt","path","exact","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Loading","Spinner","animation","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.a3bf5dc7.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:5050/api\",\r\n});\r\n","import http from \"../utility/http-commons\";\r\n\r\nconst login = (typeLogin, data) => http.post(`/${typeLogin}/login`, data);\r\n\r\nconst getBeritaUser = (id) => http.get(`//berita/label/${id}`);\r\n\r\nconst getBerita = () => http.get('/berita');\r\n\r\nconst postBerita = (data) => http.post('/berita', data);\r\n\r\nconst postBeritaExcel = (data) => http.post('/berita/excel', data);\r\n\r\nconst putBerita = (data, id) => http.put(`/berita/${id}`, data);\r\n\r\nconst deleteBerita = (id) => http.delete(`/berita/${id}`);\r\n\r\nconst getUserLabel = () => http.get('/userlabel');\r\n\r\nconst addUserLabel = (data) => http.post('/userlabel', data);\r\n\r\nconst updateUserLabel = (data, id) => http.put(`/userlabel/${id}`, data);\r\n\r\nconst deleteUserLabel = (id) => http.delete(`/userlabel/${id}`);\r\n\r\nconst getLabel = () => http.get('/label');\r\n\r\nconst addManyLabel = (data) => http.post('/label/many', data);\r\n\r\nconst getBeritaLabel = (id) => http.get(`/berita/label/${id}`);\r\n\r\nconst labeledByUser = (data, id) => http.put(`/label/${id}`, data);\r\n\r\nconst services = {\r\n    login,\r\n    getBeritaUser,\r\n    getBerita,\r\n    postBerita,\r\n    postBeritaExcel,\r\n    putBerita,\r\n    deleteBerita,\r\n    getUserLabel,\r\n    addUserLabel,\r\n    updateUserLabel,\r\n    deleteUserLabel,\r\n    getLabel,\r\n    addManyLabel,\r\n    getBeritaLabel,\r\n    labeledByUser,\r\n};\r\n\r\nexport default services;","import beritaCounter from \"./atom/beritaCounter\";\r\n\r\nconst atom = { beritaCounter };\r\n\r\nexport default atom;","import { atom } from \"recoil\";\r\n\r\nconst beritaCounter = atom({\r\n    key: 'beritaCounter',\r\n    default: 0,\r\n});\r\n\r\nexport default beritaCounter;","// https://colorhunt.co/palette/fcfcfc83ffe6ff5f5f2c2c2c\r\nconst color = {\r\n    'white' : '#FFFFFF',\r\n    'gray' : '#FCFCFC',\r\n    'blue' : '#83FFE6',\r\n    'red' : '#FF5F5F',\r\n    'black' : '#2C2C2C'\r\n}\r\n\r\nexport default color;","import React from \"react\";\r\n\r\nconst DataNull = () => {\r\n  return (\r\n    <div className=\"container py-2\">\r\n      <div className=\"container py-3 card\">\r\n        <h3 className=\"pb-2\">Tidak ada berita yg perlu di labeli lagi</h3>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataNull;\r\n","import React, { useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport swal from \"sweetalert\";\r\nimport services from \"../../process/services\";\r\nimport atom from \"../../state\";\r\nimport color from \"../../utility/color\";\r\n\r\nconst NotNull = (props) => {\r\n  const [isProses, setIsProses] = useState(false);\r\n\r\n  const { judul, sumber, isi} = props.data;\r\n\r\n  const { id, beritumId, userlabelId } = props.data.labels[0];\r\n\r\n  const [label, setLabel] = useState();\r\n\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!isProses) {\r\n      setIsProses(true);\r\n      services\r\n        .labeledByUser(\r\n          {\r\n            userlabelId,\r\n            beritumId,\r\n            label,\r\n          },\r\n          id\r\n        )\r\n        .then((_) => {\r\n          setCounter(counter + 1);\r\n          swal(\"Data berhasil ditambah\", {\r\n            icon: \"success\",\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          swal(\"Data gagal ditambah\"+error.toString(), {\r\n            icon: \"warning\",\r\n          });\r\n        });\r\n      setIsProses(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container py-2\">\r\n      <div className=\"container py-3 card\" style={{ textAlign: \"left\" }}>\r\n        <h3 className=\"pb-2\">{judul}</h3>\r\n        <p style={{ textAlign: \"justify\" }}>{isi}</p>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Select onChange={(e) => setLabel(e.target.value)}>\r\n              <option hidden=\"hidden\">- Pilih kelas berita -</option>\r\n              <option value=\"1\">Clickbait</option>\r\n              <option value=\"2\">Bukan Clickbait</option>\r\n            </Form.Select>\r\n          </Form.Group>\r\n          <button\r\n            onClick={(event) => handleSubmit(event)}\r\n            className=\"btn col-md-12 mt-3\"\r\n            style={{\r\n              backgroundColor: isProses ? color.white : color.red,\r\n              color: isProses ? color.red : color.white,\r\n            }}\r\n          >\r\n            {isProses ? \"Loading\" : \"Submit\"}\r\n          </button>\r\n          <div className=\"text-center mt-2\">\r\n            <Link\r\n              to={{ pathname: sumber }}\r\n              target=\"_blank\"\r\n              className=\"text-center\"\r\n            >\r\n              Lihat berita\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotNull;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Fragment } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useRecoilValue } from \"recoil\";\r\nimport services from \"../../process/services\";\r\nimport atom from \"../../state\";\r\nimport color from \"../../utility/color\";\r\nimport DataNull from \"./dataNull\";\r\nimport NotNull from \"./notNull\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"userWebLabel\");\r\n    history.push(\"/login\");\r\n  };\r\n\r\n  const counter = useRecoilValue(atom.beritaCounter);\r\n\r\n  const [data, setData] = useState(null);\r\n\r\n  const getBerita = useCallback(async (id) => {\r\n    const berita = await services.getBeritaLabel(id);\r\n    setData(berita.data.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"userWebLabel\") ?? 0;\r\n    console.log(user);\r\n    if (user === 0) {\r\n      history.push(\"/login\");\r\n    }\r\n    if (counter >= 0) getBerita(user);\r\n  }, [counter, getBerita, history]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className=\"py-3 mb-2 shadow\"\r\n        style={{\r\n          backgroundColor: color.white,\r\n          color: color.black,\r\n          textAlign: \"right\",\r\n        }}\r\n      >\r\n        <div className=\"container\">\r\n          <span\r\n            onClick={() => handleLogout()}\r\n            className=\"pt-1 pb-2 px-4\"\r\n            style={{\r\n              cursor: \"pointer\",\r\n              borderRadius: 30,\r\n              backgroundColor: color.red,\r\n              color: color.white,\r\n            }}\r\n          >\r\n            Keluar\r\n          </span>\r\n        </div>\r\n      </div>\r\n      {data ? <NotNull data={data} /> : <DataNull />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/error.d42ef678.svg\";","import React, { useState } from \"react\";\r\nimport { Card, Form, Button, Modal } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router\";\r\nimport cautionIMG from \"../../assets/svg/error.svg\";\r\nimport services from \"../../process/services\";\r\nimport color from \"../../utility/color.js\";\r\n\r\nconst Login = (props) => {\r\n  const history = useHistory();\r\n\r\n  const [isError, setIsError] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [isProses, setIsProses] = useState(false);\r\n\r\n  const HandleLogin = (event) => {\r\n    event.preventDefault();\r\n    if (!isProses) {\r\n      setIsProses(true);\r\n      const typeLogin = props.login === \"user\" ? \"userLabel\" : \"admin\";\r\n      services\r\n        .login(typeLogin, {\r\n          username,\r\n          password,\r\n        })\r\n        .then((result) => {\r\n          if (result.data.data.length === 0) {\r\n            setIsError(true);\r\n            return;\r\n          }\r\n          if (props.login === \"user\") {\r\n            localStorage.setItem(\"userWebLabel\", result.data.data[0].id);\r\n            history.push(\"/\");\r\n          } else {\r\n            localStorage.setItem(\"adminWebLabel\", result.data.data[0].id);\r\n            history.push(\"/admin\");\r\n          }\r\n        })\r\n        .catch(() => {\r\n          setIsError(true);\r\n        });\r\n\r\n      setIsProses(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"body-center\"\r\n      style={{ backgroundColor: color.gray, padding: 10 }}\r\n    >\r\n      <Card\r\n        className=\"center rounded-3 shadow-sm col-lg-6 col-md-8 col-sm-12 col-12 \"\r\n        style={{\r\n          backgroundColor: color.white,\r\n          color: color.black,\r\n          border: \"none\",\r\n          paddingTop: 30,\r\n          paddingBottom: 20,\r\n          paddingLeft: 20,\r\n          paddingRight: 20,\r\n        }}\r\n      >\r\n        <Card.Title>\r\n          Login {props.login === \"user\" ? \"User\" : \"Admin\"}\r\n        </Card.Title>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Username\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setUsername(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"Password\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setPassword(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              className=\"col-12 btn\"\r\n              style={{\r\n                color: isProses ? color.red : color.white,\r\n                backgroundColor: isProses ? color.gray : color.red,\r\n                border: \"none\",\r\n                outline: 0,\r\n                boxShadow: \"none\",\r\n              }}\r\n              onClick={(event) => HandleLogin(event)}\r\n            >\r\n              {isProses ? \"Loading\" : \"Login\"}\r\n            </Button>\r\n            <Modal show={isError} onHide={() => setIsError(false)}>\r\n              <Modal.Body>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\" />\r\n                  <img\r\n                    src={cautionIMG}\r\n                    alt=\"img-not-found\"\r\n                    className=\"p-2 col-md-4\"\r\n                    // width=\"100%\"\r\n                    // height=\"auto\"\r\n                  />\r\n                  <div className=\"col-md-4\" />\r\n                </div>\r\n                <p\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    padding: 10,\r\n                  }}\r\n                >\r\n                  Terjadi kesalahan, periksa kembali username dan password anda\r\n                </p>\r\n                <div className=\"row\">\r\n                  <div className=\"col-md-4\" />\r\n                  <button\r\n                    className=\"btn col-md-4\"\r\n                    style={{\r\n                      boxShadow: \"none\",\r\n                      outline: 0,\r\n                      backgroundColor: color.red,\r\n                      color: color.gray,\r\n                    }}\r\n                    onClick={() => setIsError(false)}\r\n                  >\r\n                    Coba Lagi\r\n                  </button>\r\n                  <div className=\"col-md-4\" />\r\n                </div>\r\n              </Modal.Body>\r\n            </Modal>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","export default __webpack_public_path__ + \"static/media/notfound.d1f89014.svg\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport color from \"../../utility/color\";\r\nimport notfound from \"./../../assets/svg/notfound.svg\";\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <div className=\"body-center\">\r\n            <div className=\"center col-md-4 col-12\">\r\n                <img src={notfound} alt=\"img-not-found\" className=\"p-2\" width=\"100%\" height=\"auto\" />\r\n                <Link to={props.link} className=\"btn col-md-4 mt-3\"  style={{backgroundColor : color.red, color : color.white}}>\r\n                    Back to Home\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CustomButton = (props) => {\r\n  const { onClick, title, bgColor, textColor, className, link, isLink } = props;\r\n  return (\r\n    <div\r\n      style={{\r\n        marginRight: 15,\r\n      }}\r\n    >\r\n      {isLink ? (\r\n        <Link\r\n          // onClick={() => onClick ?? null}\r\n          to={link}\r\n          className={`btn ${className}`}\r\n          style={{\r\n            boxShadow: \"none\",\r\n            outline: 0,\r\n            backgroundColor: bgColor,\r\n            color: textColor,\r\n          }}\r\n        >\r\n          {title}\r\n        </Link>\r\n      ) : (\r\n        <div\r\n          onClick={() => onClick ?? null}\r\n          className={`btn ${className}`}\r\n          style={{\r\n            boxShadow: \"none\",\r\n            outline: 0,\r\n            backgroundColor: bgColor,\r\n            color: textColor,\r\n          }}\r\n        >\r\n          {title}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\n// import services from \"../../process/service\";\r\nimport swal from \"sweetalert\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport atom from \"../../state\";\r\nimport services from \"../../process/services\";\r\n\r\nconst EditedModal = (props) => {\r\n  const { id, judul, sumber, isi } = props;\r\n\r\n  const [handleJudul, setHandleJudul] = useState(judul);\r\n  const [handleSumber, setHandleSumber] = useState(sumber);\r\n  const [handleIsi, setHandleIsi] = useState(isi);\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n    const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const handleUpdateBerita = async () => {\r\n    await services\r\n      .putBerita(\r\n        {\r\n          judul: handleJudul,\r\n          sumber: handleSumber,\r\n          isi: handleIsi,\r\n        },\r\n        id\r\n      )\r\n      .then((result) => {\r\n        setCounter(counter + 1);\r\n        handleClose();\r\n        swal(\"Data berhasil diedit\", {\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((_) => {\r\n        setIsError(true);\r\n        swal(\"Data gagal diedit\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Edit\"\r\n          textColor={color.black}\r\n          bgColor={color.blue}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika mengubah data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Judul\"\r\n                value={handleJudul}\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setHandleJudul(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Sumber\"\r\n                value={handleSumber}\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setHandleSumber(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <textarea\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                className=\"form-control\"\r\n                onChange={(value) => setHandleIsi(value.target.value)}\r\n              >\r\n                {handleIsi}\r\n              </textarea>\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleUpdateBerita}>\r\n            <CustomButton\r\n              title=\"Simpan\"\r\n              bgColor={color.blue}\r\n              textColor={color.black}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditedModal;\r\n","import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport color from \"../../utility/color\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst TableData = (props) => {\r\n  const { data, columns, defaultSorted } = props;\r\n\r\n  return (\r\n    <ToolkitProvider\r\n      bootstrap4\r\n      keyField=\"id\"\r\n      data={data}\r\n      columns={columns}\r\n      defaultSorted={defaultSorted}\r\n      // onDataSizeChange={}\r\n      search\r\n    >\r\n      {(props) => (\r\n        <div>\r\n          <div\r\n            className=\"mb-2\"\r\n            style={{\r\n              float: \"right\",\r\n            }}\r\n          >\r\n            <SearchBar\r\n              {...props.searchProps}\r\n              style={{\r\n                borderColor: color.black,\r\n                outline: 0,\r\n                boxShadow: \"none\",\r\n              }}\r\n              placeholder=\"Search ...\"\r\n            />\r\n          </div>\r\n          <BootstrapTable\r\n            {...props.baseProps}\r\n            pagination={paginationFactory({\r\n              active: false,\r\n            })}\r\n            style={{\r\n              overflowX: \"auto\",\r\n            }}\r\n           \r\n          />\r\n        </div>\r\n      )}\r\n    </ToolkitProvider>\r\n  );\r\n};\r\n\r\nexport default TableData;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport swal from \"sweetalert\";\r\nimport atom from \"../../state\";\r\nimport services from \"../../process/services\";\r\n\r\nconst TambahBeritaExcel = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [isProses, setIsProses] = useState(false);\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const [fileExcel, setFileExcel] = useState();\r\n  //   const [sumberBerita, setSumberBerita] = useState(\"\");\r\n  //   const idAdmin = localStorage.getItem(\"user\") ?? 0;\r\n\r\n  const handleAddBerita = async () => {\r\n    setIsProses(true);\r\n    const data = new FormData();\r\n    data.append(\"fileExcel\", fileExcel);\r\n    // data.append(\"sumberBerita\", sumberBerita);\r\n    // data.append(\"idAdmin\", idAdmin);\r\n    await services\r\n      .postBeritaExcel(data)\r\n      .then((_) => {\r\n        handleClose();\r\n        setCounter(counter + 1);\r\n        setIsProses(false);\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        setIsProses(false);\r\n        swal(\"Data gagal ditambah\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setIsError(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Tambah Data With Excel\"\r\n          bgColor={color.red}\r\n          textColor={color.gray}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika menambahkan data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"file\"\r\n                placeholder=\"Judul\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => {\r\n                  setFileExcel(value.target.files[0]);\r\n                }}\r\n              />\r\n            </Form.Group>\r\n            {/* <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Sumber\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setSumberBerita(value.target.value)}\r\n              />\r\n            </Form.Group> */}\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleAddBerita}>\r\n            <CustomButton\r\n              title={isProses ? \"Loading...\" : \"Tambah\"}\r\n              bgColor={isProses ? \"#808080\" : color.red}\r\n              textColor={color.gray}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TambahBeritaExcel;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\nimport swal from \"sweetalert\";\r\nimport services from \"../../process/services\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport atom from \"../../state\";\r\n\r\nconst TambahModal = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const [judul, setJudul] = useState(\"\");\r\n  const [sumber, setSumber] = useState(\"\");\r\n  const [isi, setIsi] = useState(\"\");\r\n\r\n  const handleAddBerita = async () => {\r\n    await services\r\n      .postBerita({\r\n        judul,\r\n        sumber,\r\n        isi,\r\n      })\r\n      .then((_) => {\r\n        setCounter(counter + 1);\r\n        handleClose();\r\n        swal(\"Data berhasil ditambah\", {\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        swal(\"Data gagal ditambah\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setIsError(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Tambah Data\"\r\n          bgColor={color.red}\r\n          textColor={color.gray}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika menambahkan data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Judul\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setJudul(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Sumber\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setSumber(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <textarea\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                className=\"form-control\"\r\n                onChange={(value) => setIsi(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleAddBerita}>\r\n            <CustomButton\r\n              title=\"Tambah\"\r\n              bgColor={color.red}\r\n              textColor={color.gray}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TambahModal;\r\n","import React, { Fragment } from \"react\";\r\nimport color from \"../../utility/color\";\r\nconst Title = (props) => {\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"space\">\r\n        <h1\r\n          style={{\r\n            fontSize: 20,\r\n            color: color.red,\r\n          }}\r\n        >\r\n          {props.title}\r\n        </h1>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport swal from \"sweetalert\";\r\nimport CustomButton from \"../../../components/customButton\";\r\nimport EditedModal from \"../../../components/editedModal\";\r\nimport TableData from \"../../../components/table\";\r\nimport TambahBeritaExcel from \"../../../components/tambahBeritaExcel\";\r\nimport TambahModal from \"../../../components/tambahModal\";\r\nimport Title from \"../../../components/title\";\r\nimport services from \"../../../process/services\";\r\nimport atom from \"../../../state\";\r\nimport color from \"../../../utility/color\";\r\n\r\nconst Berita = () => {\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: \"Apakah anda yakin ingin menghapus semua data?\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        services.deleteBerita(id).then((_) => {\r\n          swal(\"Data berhasil dihapus\", {\r\n            icon: \"success\",\r\n          });\r\n          setCounter(counter + 1);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"judul\",\r\n      text: \"Judul\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"sumber\",\r\n      text: \"Sumber\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"isi\",\r\n      text: \"Isi\",\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"id\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n      formatter: (_, row) => {\r\n        const { id, judul, sumber, isi } = row;\r\n        return (\r\n          <Fragment>\r\n            <div className=\"mb-1\">\r\n              <EditedModal judul={judul} sumber={sumber} isi={isi} id={id} />\r\n            </div>\r\n            <div className=\"mb-1\" onClick={() => handleDelete(id)}>\r\n              <CustomButton\r\n                title=\"Delete\"\r\n                textColor={color.gray}\r\n                bgColor={color.red}\r\n                id={id}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultSortedDataset = [\r\n    {\r\n      dataField: \"judul\",\r\n      order: \"asc\",\r\n    },\r\n  ];\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const getBerita = useCallback(async () => {\r\n    const berita = await services.getBerita();\r\n    setData(berita.data.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (counter >= 0) getBerita();\r\n  }, [counter, getBerita]);\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Title title=\"Berita\" />\r\n      <div className=\"mt-4\" />\r\n      <div className=\"row\">\r\n        <div className=\"m-1 col-md-2\">\r\n          <TambahModal />\r\n        </div>\r\n        <div className=\"m-1 col-md-4\">\r\n          <TambahBeritaExcel />\r\n        </div>\r\n      </div>\r\n      <TableData\r\n        data={data}\r\n        columns={columns}\r\n        defaultSorted={defaultSortedDataset}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Berita;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\n\r\nconst CardDashboard = (props) => {\r\n\r\n  const {title, body} = props;\r\n\r\n  return (\r\n    <Card\r\n      style={{\r\n        textAlign: \"center\",\r\n        color: color.black,\r\n        backgroundColor: color.white,\r\n        border: \"none\",\r\n      }}\r\n      className=\"rounded-3 shadow-sm p-3\"\r\n    >\r\n      <Card.Title\r\n        style={{\r\n          fontSize: 14,\r\n          fontWeight: 400,\r\n        }}\r\n      >\r\n        {title}\r\n      </Card.Title>\r\n      <Card.Body\r\n        style={{\r\n          fontSize: 50,\r\n          fontWeight: 600,\r\n        }}\r\n        className=\"m-1\"\r\n      >\r\n        {body}\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CardDashboard;","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport CardDashboard from \"../../../components/cardDashboard\";\r\nimport Title from \"../../../components/title\";\r\n\r\nconst Dashboard = () => {\r\n  return <Container className=\"mt-3\">\r\n    <Title title=\"Dashboard\" />\r\n    <div className=\"row\">\r\n      <div className=\"col-md-4 p-2\">\r\n        <CardDashboard title=\"Total Berita\" body=\"1000\" />\r\n      </div>\r\n      <div className=\"col-md-4 p-2\">\r\n        <CardDashboard title=\"Total User Label\" body=\"10\" />\r\n      </div>\r\n      <div className=\"col-md-4 p-2\">\r\n        <CardDashboard title=\"Total Hasil Label Berita\" body=\"1000\" />\r\n      </div>\r\n    </div>\r\n  </Container>;\r\n};\r\n\r\nexport default Dashboard;\r\n","import { selector } from \"recoil\";\r\nimport services from \"../process/services\";\r\nimport atom from \"./index\";\r\n\r\nconst getUserLabel = selector({\r\n    key: \"getUserLabel\",\r\n    get: async ({ get }) => {\r\n        get(atom.beritaCounter);\r\n        const data = await services.getUserLabel();\r\n        return data.data.data;\r\n    },\r\n});\r\n\r\nexport default getUserLabel;","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\nimport swal from \"sweetalert\";\r\nimport services from \"../../process/services\";\r\nimport { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport atom from \"../../state\";\r\nimport getUserLabel from \"../../state/selector\";\r\n\r\nconst TambahLabel = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const userLabel = useRecoilValue(getUserLabel);\r\n\r\n  const [idUserLabel, setIdUserLabel] = useState();\r\n  const [jumlahBerita, setJumlahBerita] = useState();\r\n\r\n  const handleAddBerita = async () => {\r\n    await services\r\n      .addManyLabel({\r\n        idUserLabel,\r\n        jumlahBerita,\r\n      })\r\n      .then((_) => {\r\n        setCounter(counter + 1);\r\n        handleClose();\r\n        swal(\"Data berhasil ditambah\", {\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        swal(\"Data gagal ditambah\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setIsError(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Tambah Data\"\r\n          bgColor={color.red}\r\n          textColor={color.gray}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika menambahkan data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Select\r\n                className=\"mb-3\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(e) => setIdUserLabel(e.target.value)}\r\n              >\r\n                <option hidden>Masukkan user label</option>\r\n                {userLabel.map((e, index) => (\r\n                  <option key={index} value={e.id}>\r\n                    {e.username}\r\n                  </option>\r\n                ))}\r\n              </Form.Select>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"number\"\r\n                placeholder=\"Jumlah Berita\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setJumlahBerita(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleAddBerita}>\r\n            <CustomButton\r\n              title=\"Tambah\"\r\n              bgColor={color.red}\r\n              textColor={color.gray}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TambahLabel;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useRecoilValue } from \"recoil\";\r\n// import CustomButton from \"../../../components/customButton\";\r\nimport TableData from \"../../../components/table\";\r\nimport TambahLabel from \"../../../components/tambahLabel\";\r\nimport Title from \"../../../components/title\";\r\nimport services from \"../../../process/services\";\r\nimport atom from \"../../../state\";\r\nimport color from \"../../../utility/color\";\r\n\r\nconst Label = () => {\r\n  //   const handleDelete = () => {\r\n  //     swal({\r\n  //       title: \"Apakah anda yakin ingin menghapus semua data?\",\r\n  //       icon: \"warning\",\r\n  //       buttons: true,\r\n  //       dangerMode: true,\r\n  //     }).then((willDelete) => {\r\n  //       if (willDelete) {\r\n  //         services.deleteAllBerita().then((_) => {\r\n  //           swal(\"Data berhasil dihapus\", {\r\n  //             icon: \"success\",\r\n  //           });\r\n  //           setDatasetState();\r\n  //           setDatatestState();\r\n  //           setDatatrainState();\r\n  //         });\r\n  //       }\r\n  //     });\r\n  //   };\r\n\r\n  const counter = useRecoilValue(atom.beritaCounter);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const getBerita = useCallback(async () => {\r\n    const berita = await services.getLabel();\r\n    setData(berita.data.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (counter >= 0) getBerita();\r\n  }, [counter, getBerita]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"label\",\r\n      text: \"Hasil Label\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"userlabelId\",\r\n      text: \"Id User\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"beritumId\",\r\n      text: \"Id Berita\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    // {\r\n    //   dataField: \"id\",\r\n    //   text: \"Action\",\r\n    //   headerStyle: {\r\n    //     backgroundColor: color.red,\r\n    //     color: color.gray,\r\n    //     border: \"none\",\r\n    //   },\r\n    //   formatter: (_, row) => {\r\n    //     const { id } = row;\r\n    //     return (\r\n    //       <div className=\"mb-1\" onClick={() => handleDelete(id)}>\r\n    //         <CustomButton\r\n    //           title=\"Delete\"\r\n    //           textColor={color.gray}\r\n    //           bgColor={color.red}\r\n    //           id={id}\r\n    //         />\r\n    //       </div>\r\n    //     );\r\n    //   },\r\n    // },\r\n  ];\r\n\r\n  const defaultSortedDataset = [\r\n    {\r\n      dataField: \"label\",\r\n      order: \"asc\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Title title=\"Label\" />\r\n        <TambahLabel />\r\n      <TableData\r\n        data={data}\r\n        columns={columns}\r\n        defaultSorted={defaultSortedDataset}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Label;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\nimport swal from \"sweetalert\";\r\nimport services from \"../../process/services\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport atom from \"../../state\";\r\n\r\nconst EditedUser = (props) => {\r\n  const { id, username, password } = props;\r\n\r\n  const [handleUsername, setHandleUsername] = useState(username);\r\n  const [handlePassword, setHandlePassword] = useState(password);\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const handleUpdateBerita = async () => {\r\n    await services\r\n      .updateUserLabel(\r\n        {\r\n          username: handleUsername,\r\n          password: handlePassword,\r\n        },\r\n        id\r\n      )\r\n      .then((result) => {\r\n        handleClose();\r\n        setCounter(counter + 1);\r\n        swal(\"Data berhasil diedit\", {\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        swal(\"Data gagal diedit\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Edit\"\r\n          textColor={color.black}\r\n          bgColor={color.blue}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Data</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika mengubah data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Username\"\r\n                value={handleUsername}\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setHandleUsername(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Password\"\r\n                value={handlePassword}\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setHandlePassword(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleUpdateBerita}>\r\n            <CustomButton\r\n              title=\"Simpan\"\r\n              bgColor={color.blue}\r\n              textColor={color.black}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default EditedUser;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { Alert, Form, Modal } from \"react-bootstrap\";\r\nimport color from \"../../utility/color\";\r\nimport CustomButton from \"../customButton\";\r\n// import services from \"../../process/service\";\r\n// import { useResetRecoilState } from \"recoil\";\r\n// import { getDataset, getDatatest, getDatatrain } from \"../../state\";\r\nimport swal from \"sweetalert\";\r\nimport services from \"../../process/services\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport atom from \"../../state\";\r\n\r\nconst TambahUser = () => {\r\n  const [show, setShow] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const handleAddUser = async () => {\r\n    await services\r\n      .addUserLabel({\r\n        username,\r\n        password,\r\n      })\r\n      .then((_) => {\r\n        handleClose();\r\n        setCounter(counter + 1);\r\n        swal(\"Data berhasil ditambah\", {\r\n          icon: \"success\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        setIsError(true);\r\n        swal(\"Data gagal ditambah\", {\r\n          icon: \"warning\",\r\n        });\r\n      });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n    setIsError(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => handleShow()}>\r\n        <CustomButton\r\n          title=\"Tambah User\"\r\n          bgColor={color.red}\r\n          textColor={color.gray}\r\n        />\r\n      </div>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Tambah User</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {isError ? (\r\n            <Alert variant=\"danger\">\r\n              Terdapat kesalahan ketika menambahkan data\r\n            </Alert>\r\n          ) : null}\r\n          <Form>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Username\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setUsername(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\">\r\n              <Form.Control\r\n                placeholder=\"Password\"\r\n                style={{\r\n                  borderColor: color.black,\r\n                  opacity: 0.5,\r\n                  outline: 0,\r\n                  boxShadow: \"none\",\r\n                }}\r\n                onChange={(value) => setPassword(value.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <div onClick={handleAddUser}>\r\n            <CustomButton\r\n              title=\"Tambah\"\r\n              bgColor={color.red}\r\n              textColor={color.gray}\r\n              className=\"col-md-12\"\r\n            />\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default TambahUser;\r\n","import React, { Fragment, useCallback, useEffect, useState } from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport swal from \"sweetalert\";\r\nimport CustomButton from \"../../../components/customButton\";\r\nimport EditedUser from \"../../../components/editedUser\";\r\nimport TableData from \"../../../components/table\";\r\nimport TambahUser from \"../../../components/tambahUser\";\r\nimport Title from \"../../../components/title\";\r\nimport services from \"../../../process/services\";\r\nimport atom from \"../../../state\";\r\nimport color from \"../../../utility/color\";\r\n\r\nconst UserLabel = () => {\r\n  const handleDelete = (id) => {\r\n    swal({\r\n      title: \"Apakah anda yakin ingin menghapus semua data?\",\r\n      icon: \"warning\",\r\n      buttons: true,\r\n      dangerMode: true,\r\n    }).then((willDelete) => {\r\n      if (willDelete) {\r\n        services.deleteUserLabel(id).then((_) => {\r\n          swal(\"Data berhasil dihapus\", {\r\n            icon: \"success\",\r\n          });\r\n          setCounter(counter + 1);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const [counter, setCounter] = useRecoilState(atom.beritaCounter);\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  const getBerita = useCallback(async () => {\r\n    const berita = await services.getUserLabel();\r\n    setData(berita.data.data);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (counter >= 0) getBerita();\r\n  }, [counter, getBerita]);\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"username\",\r\n      text: \"username\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"password\",\r\n      text: \"Password\",\r\n      sort: true,\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n    },\r\n    {\r\n      dataField: \"id\",\r\n      text: \"Action\",\r\n      headerStyle: {\r\n        backgroundColor: color.red,\r\n        color: color.gray,\r\n        border: \"none\",\r\n      },\r\n      formatter: (_, row) => {\r\n        const { id, username, password } = row;\r\n        return (\r\n          <Fragment>\r\n            <div className=\"mb-1\">\r\n              <EditedUser username={username} password={password} id={id} />\r\n            </div>\r\n            <div className=\"mb-1\" onClick={() => handleDelete(id)}>\r\n              <CustomButton\r\n                title=\"Delete\"\r\n                textColor={color.gray}\r\n                bgColor={color.red}\r\n                id={id}\r\n              />\r\n            </div>\r\n          </Fragment>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultSortedDataset = [\r\n    {\r\n      dataField: \"username\",\r\n      order: \"asc\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container className=\"mt-3\">\r\n      <Title title=\"User Label\" />\r\n      <div className=\"mt-4\" />\r\n      <TambahUser />\r\n      <TableData\r\n        data={data}\r\n        columns={columns}\r\n        defaultSorted={defaultSortedDataset}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default UserLabel;\r\n","import {\r\n  faHome,\r\n  faSignOutAlt,\r\n  faTable,\r\n  faTags,\r\n  faUser\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React, { useEffect } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  useHistory,\r\n} from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\nimport NotFound from \"../notfound\";\r\nimport Berita from \"./berita\";\r\nimport Dashboard from \"./dashboard\";\r\nimport Label from \"./label\";\r\nimport \"./style.css\";\r\nimport UserLabel from \"./userLabel\";\r\n\r\nconst Admin = () => {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const user = localStorage.getItem(\"adminWebLabel\") ?? 0;\r\n    if (user === 0) {\r\n      history.push(\"../login-admin\");\r\n    }\r\n  });\r\n\r\n  const HandleLogout = () => {\r\n    localStorage.removeItem(\"adminWebLabel\");\r\n    history.push(\"../login-admin\");\r\n  };\r\n\r\n  const urlAdmin = [\r\n    {\r\n      name: \"Dashboard\",\r\n      link: \"/\",\r\n      route: <Dashboard />,\r\n      icon: faHome,\r\n    },\r\n    {\r\n      name: \"Berita\",\r\n      link: \"/berita\",\r\n      route: <Berita />,\r\n      icon: faTable,\r\n    },\r\n    {\r\n      name: \"Label\",\r\n      link: \"/label\",\r\n      route: <Label />,\r\n      icon: faTags,\r\n    },\r\n    {\r\n      name: \"User Label\",\r\n      link: \"/userlabel\",\r\n      route: <UserLabel />,\r\n      icon: faUser,\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <Router basename=\"/admin\">\r\n      <div className=\"bg-default admin-wrapper\">\r\n        <div className=\"admin-aside\">\r\n          <Link to=\"/\" className=\"title\">\r\n            <span className=\"not-mobile mx-3\">De-Clickbait</span>\r\n            <span className=\"is-mobile mx-3\">DC</span>\r\n          </Link>\r\n          <div\r\n            style={{\r\n              height: 20,\r\n            }}\r\n          />\r\n          <div>\r\n            <ul\r\n              style={{\r\n                padding: 0,\r\n                margin: 0,\r\n              }}\r\n            >\r\n              {urlAdmin.map((element, index) => (\r\n                <li\r\n                  key={index}\r\n                  style={{\r\n                    listStyleType: \"none\",\r\n                    padding: 0,\r\n                    margin: 0,\r\n                    marginBottom: 15,\r\n                  }}\r\n                >\r\n                  <Link className=\"menu-list\" to={element.link}>\r\n                    <FontAwesomeIcon\r\n                      icon={element.icon}\r\n                      size=\"lg\"\r\n                      className=\"mx-3\"\r\n                    />\r\n                    <span className=\"not-mobile\">{element.name}</span>\r\n                  </Link>\r\n                </li>\r\n              ))}\r\n              <li\r\n                key={99}\r\n                style={{\r\n                  listStyleType: \"none\",\r\n                  padding: 0,\r\n                  margin: 0,\r\n                  marginBottom: 15,\r\n                }}\r\n              >\r\n                <div\r\n                  style={{\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  className=\"menu-list\"\r\n                  onClick={() => HandleLogout()}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    icon={faSignOutAlt}\r\n                    size=\"lg\"\r\n                    className=\"mx-3\"\r\n                  />\r\n                  <span className=\"not-mobile\">Logout</span>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\"margin-main\" />\r\n        <div className=\"admin-main\">\r\n          <Switch>\r\n            {urlAdmin.map((element, index) =>\r\n              element.link === \"/\" ? (\r\n                <Route key={index} path={element.link} exact>\r\n                  {element.route}\r\n                </Route>\r\n              ) : (\r\n                <Route key={99} path={element.link}>\r\n                  {element.route}\r\n                </Route>\r\n              )\r\n            )}\r\n            <Route key={101} path=\"*\">\r\n              <NotFound link=\"/\" />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/home\";\nimport Login from \"./pages/login\";\nimport Admin from \"./pages/admin\";\nimport NotFound from \"./pages/notfound\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/login\">\n          <Login login=\"user\" />\n        </Route>\n        <Route path=\"/login-admin\">\n          <Login login=\"admin\" />\n        </Route>\n        <Route path=\"/admin\">\n          <Admin/>\n        </Route>\n        <Route path=\"*\">\n          <NotFound link='/' />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <div className=\"body-center\">\r\n      <Spinner animation=\"border\" variant=\"danger\" className=\"center\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport \"react-bootstrap-table2-paginator/dist/react-bootstrap-table2-paginator.min.css\";\nimport { RecoilRoot } from \"recoil\";\nimport Loading from \"./pages/loading\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <Suspense fallback={<Loading />}>\n        <App />\n      </Suspense>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}